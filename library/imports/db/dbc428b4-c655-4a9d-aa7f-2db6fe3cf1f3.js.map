{"version":3,"sources":["assets\\scripts\\AssetsLoadScript.js"],"names":["cc","Class","Component","properties","numLabel","Label","onLoad","self","urls","id","url","raw","LoadingItems","create","loader","completedCount","totalCount","item","progress","toFixed","log","string","Math","abs","console","errors","items","i","length","getError"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,QAAQ,EAAEJ,EAAE,CAACK;AAXL,GAHP;AAkBL;AACAC,EAAAA,MAAM,EAAE,kBAAY;AAEhB,QAAIC,IAAI,GAAG,IAAX;AAEA,QAAIC,IAAI,GAAG,CACP;AACIC,MAAAA,EAAE,EAAE,MADR;AAEIC,MAAAA,GAAG,EAAEV,EAAE,CAACU,GAAH,CAAOC,GAAP,CAAW,sBAAX;AAFT,KADO,CAAX;AAOAX,IAAAA,EAAE,CAACY,YAAH,CAAgBC,MAAhB,CAAuBb,EAAE,CAACc,MAA1B,EAAkCN,IAAlC,EAAwC,UAAUO,cAAV,EAA0BC,UAA1B,EAAsCC,IAAtC,EAA4C;AAChF,UAAIC,QAAQ,GAAG,CAAC,MAAMH,cAAN,GAAuBC,UAAxB,EAAoCG,OAApC,CAA4C,CAA5C,CAAf;AACAnB,MAAAA,EAAE,CAACoB,GAAH,CAAOF,QAAQ,GAAG,GAAlB;AACAX,MAAAA,IAAI,CAACH,QAAL,CAAciB,MAAd,GAAuBC,IAAI,CAACC,GAAL,CAASL,QAAT,IAAqB,GAA5C;AACAM,MAAAA,OAAO,CAACJ,GAAR,CAAY,eAAaH,IAAI,CAACP,GAA9B;AAEH,KAND,EAMG,UAAUe,MAAV,EAAkBC,KAAlB,EAAyB;AACxB,UAAID,MAAJ,EAAY;AACR,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmC,EAAED,CAArC,EAAwC;AACpC3B,UAAAA,EAAE,CAACoB,GAAH,CAAO,gBAAgBK,MAAM,CAACE,CAAD,CAAtB,GAA4B,WAA5B,GAA0CD,KAAK,CAACG,QAAN,CAAeJ,MAAM,CAACE,CAAD,CAArB,CAAjD;AACH;AACJ,OAJD,MAKK;AACDH,QAAAA,OAAO,CAACJ,GAAR,CAAYM,KAAK,CAACV,UAAlB;AAEH;AACJ,KAhBD;AAmBH,GAjDI,CAmDL;AACA;AAEA;;AAtDK,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        numLabel: cc.Label,\r\n\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n        var self = this;\r\n\r\n        var urls = [\r\n            {\r\n                id: \"tank\",\r\n                url: cc.url.raw(\"resources/tank.plist\")\r\n            }\r\n        ];\r\n\r\n        cc.LoadingItems.create(cc.loader, urls, function (completedCount, totalCount, item) {\r\n            var progress = (100 * completedCount / totalCount).toFixed(2);\r\n            cc.log(progress + '%');\r\n            self.numLabel.string = Math.abs(progress) + '%';\r\n            console.log(\"==========\"+item.url);\r\n\r\n        }, function (errors, items) {\r\n            if (errors) {\r\n                for (var i = 0; i < errors.length; ++i) {\r\n                    cc.log('Error url: ' + errors[i] + ', error: ' + items.getError(errors[i]));\r\n                }\r\n            }\r\n            else {\r\n                console.log(items.totalCount);\r\n                \r\n            }\r\n        })\r\n\r\n\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}